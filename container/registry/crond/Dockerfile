# COmanage Registry Dockerfile template
#
# Portions licensed to the University Corporation for Advanced Internet
# Development, Inc. ("UCAID") under one or more contributor license agreements.
# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# UCAID licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at:
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
ARG COMANAGE_REGISTRY_VERSION=develop
ARG COMANAGE_REGISTRY_BASE_IMAGE_VERSION=1

FROM comanage-registry-base:${COMANAGE_REGISTRY_VERSION}-${COMANAGE_REGISTRY_BASE_IMAGE_VERSION}

RUN apt-get update \
      && apt-get install -y --no-install-recommends \
        busybox-syslogd \
        cron \
        libkrb5-3 \
        libkrb5-dev

# Default PECL krb5 version but may be overriden using a build argument.
ARG PECL_KRB5_VERSION=1.1.4
ENV PECL_KRB5_VERSION=${PECL_KRB5_VERSION}

# Use the helper functions from the upstream php Docker image
# to build, install, and enable the PECL krb5 module. After
# build is complete purge the development libraries and source.
RUN docker-php-source extract \
        && pecl bundle -d /usr/src/php/ext krb5-${PECL_KRB5_VERSION} \
        && docker-php-ext-configure krb5 --with-krb5kadm \
        && docker-php-ext-install krb5 \
        && docker-php-ext-enable krb5 \
        && docker-php-source delete \
        && apt-get purge -y libkrb5-dev \
        && apt-get clean

COPY --chown=root:root container/registry/crond/root-crontab /etc/crontab
COPY --chown=root:root container/registry/crond/www-data-crontab /srv/comanage-registry/local/crontab

RUN /usr/bin/crontab -u www-data /srv/comanage-registry/local/crontab \
      && /usr/sbin/usermod --shell /bin/bash www-data \
      && touch /etc/default/locale

COPY container/registry/crond/docker-comanage-cron-entrypoint /usr/local/bin/

ENTRYPOINT ["docker-comanage-cron-entrypoint"]

CMD ["/usr/sbin/cron", "-f", "-L", "15"]
